# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  Build:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
          
      - name: Build MorMor
        shell: powershell
        run: |
          dotnet build Plugin.sln

      - name: Upload binary files(${{ matrix.runtimeIdentifier }}) for .NET 6.0
        uses: actions/upload-artifact@v3
        with:
          name: Plugins_${{ matrix.runtimeIdentifier }}_6.0
          path: out/${{ matrix.runtimeIdentifier }}
          
      - name: Compress file
        run: |
          Compress-Archive -Path 'out\${{ matrix.runtimeIdentifier }}' -DestinationPath  'TShockAdapter_${{ matrix.runtimeIdentifier }}_6.0.zip'
          
      - name: Prepare release files
        uses: actions/upload-artifact@v3
        with:
          name: Plugins_all
          path: Plugins_${{ matrix.runtimeIdentifier }}_6.0.zip
  NightlyRelease:
    name: Nightly Release
    runs-on: ubuntu-latest
    needs: Build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Update Nightly Tag
        run: |
          git tag -f nightly
          git push -f origin nightly
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: Plugins_all
          path: ./bin
      - name: Update Nightly Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.setenvo.outputs.TAG_NAME }}
          name: Release v${{ steps.setenvo.outputs.TAG_NAME }}
          prerelease: true
          body: '> ⚠️This is a nightly release.'
          artifacts: |
            ./bin/*
          allowUpdates: true
          removeArtifacts: true
  
  ClearTempArtifacts:
    name: Clear Temp Artifacts
    if: always()
    runs-on: ubuntu-latest
    needs:
      - NightlyRelease
    permissions:
      actions: write
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            Plugins_all
